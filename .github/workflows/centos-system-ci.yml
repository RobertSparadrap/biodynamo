# Runs the installation tests and valgrind tests in the following cases:
#   1) every day at 3 am
#   2) a pull request to the master branch

name: CentOS System CI

on:
  schedule:
    # Every day at 3 am
    - cron: '0 3 * * *'
  pull_request:
    # Upon pull requests
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest
    container:
      image: centos:7

    steps:
      # Do this prior to Checkout BioDynaMo, because the CentOS docker container
      # does not come with git preinstalled. This will mess up later calls to 
      # `git describe --tags`
    - name: Install latest version of git
      shell: bash
      run: |
        yum install -y http://opensource.wandisco.com/centos/7/git/x86_64/wandisco-git-release-7-2.noarch.rpm
        yum install -y git

    - name: Checkout BioDynaMo
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
    
    - name: Install BioDynaMo
      shell: bash
      run: |
        yum update -y
        yum install -y redhat-lsb-core sudo xorg-x11-server-Xvfb fontconfig \
          mesa-dri-drivers xorg-x11-xauth which
        BDM_CMAKE_FLAGS="-Dparaview=off" ./install.sh << EOF
        y
        EOF

    - name: Set INSTALL_DIR
      run: |
        VERSION=`git describe --tags`
        REGEX='[^-]*'
        [[ $VERSION =~ $REGEX ]]
        echo "::set-env name=INSTALL_DIR::${HOME}/biodynamo-${BASH_REMATCH}"

    - name: Live debugging
      shell: bash
      run: |
        yum install epel-release -y
        yum update -y
        yum install -y tmate openssh-clients
        mkdir -p ~/.ssh
        echo -e 'y\n'|ssh-keygen -q -t rsa -N "" -f ~/.ssh/id_rsa
        tmate -S /tmp/tmate.sock new-session -d
        tmate -S /tmp/tmate.sock wait tmate-ready
        tmate -S /tmp/tmate.sock display -p '#{tmate_ssh}'
        sleep infinity

    # - name: Valgrind tests BioDynaMo
    #   shell: bash
    #   working-directory: build
    #   run: |
    #     . scl_source enable devtoolset-7 || true
    #     . /etc/profile.d/modules.sh || true
    #     module load mpi
    #     . $INSTALL_DIR/bin/thisbdm.sh
    #     make run-valgrind

    - name: System tests BioDynaMo
      shell: bash
      working-directory: build
      run: |
        . scl_source enable devtoolset-7 || true
        . /etc/profile.d/modules.sh || true
        module load mpi
        . $INSTALL_DIR/bin/thisbdm.sh
        git config --system user.name "Test User"
        git config --system user.email user@test.com
        xvfb-run -d -s "-screen 0 2560x1440x24" make run-demos

    - name: Test out-of-source simulation
      shell: bash
      working-directory: build
      run: |
        . scl_source enable devtoolset-7 || true
        . /etc/profile.d/modules.sh || true
        module load mpi
        . $INSTALL_DIR/bin/thisbdm.sh
        biodynamo new test-sim
        . ../test/util.inc
        xvfb-run -d -s "-screen 0 2560x1440x24" run_cmake_simulation test-sim

    - name: Notify Slack
      uses: 8398a7/action-slack@v3
      with:
        status: custom
        fields: workflow,job,commit,repo,ref,author,took,message
        custom_payload: |
          {
            username: 'GitHub CI',
            icon_emoji: ':octocat:',
            attachments: [{
              color: '${{ job.status }}' === 'success' ? 'good' : '${{ job.status }}' === 'failure' ? 'danger' : 'warning',
              text: `${process.env.AS_WORKFLOW}\n${process.env.AS_JOB} (${process.env.AS_COMMIT}) of ${process.env.AS_REPO}@${process.env.AS_REF} by ${process.env.AS_AUTHOR} ${{ job.status }} in ${process.env.AS_TOOK}\n${process.env.AS_MESSAGE}`
            }]
          }
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
      if: always() # Pick up events even if the job fails or is canceled
